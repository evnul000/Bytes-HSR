{"ast":null,"code":"var _jsxFileName = \"/Users/erickcabrera/Desktop/Bytes/test-react-1/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n//must use usestate to state variables that we can hook from\n// import React, {useState} from \"react\";\n// import \"./App.css\";\n// function City({city, state, lat, long, estimatedPopulation, totalWages}) {\n//   //how the zip code information will be displayed\n//   return (\n//     <div class=\"row city\">\n//   <div class=\"box\">\n//   <div class=\"title\">{city},<b> </b>{state}</div>\n//     <div class=\"sub\">\n//       <ul>\n//         <li><b>State: </b>{state}</li>\n//         <li><b>Location: </b> ({lat},<b> </b>{long})</li>\n//         <li><b>Population (estimated): </b> {estimatedPopulation} </li>\n//         <li><b>Estimated Wages: </b> {totalWages} </li>\n//       </ul>\n//     </div>\n//     </div>\n//   </div>\n//   );\n// }\n// //Handles zip input\n// function ZipInput({handleChange, value}) {\n//   return (\n//   <div class=\"inputBox\">\n//     <input class=\"input\" name=\"zip\" placeholder=\"Try 11006\" type=\"text\" onChange={handleChange} value={value}>\n//     </input>\n//   </div>\n//   );\n// }\n// function App() {\n//   //Zip code\n//   const [zip, setZip] = useState(\"\");\n//   //holds zip info from api event handler in array\n//   const [ZipInfo,setZipInfo]= useState([]);\n//   //event handler that  lets zipInfo hold array of information\n//   const zipEvent = (event) =>{\n//     const tempZip = event.target.value;\n//     //if the zip length is 5, it will fetch from the api\n//     if (zip && tempZip.length === 5) {\n//       fetch(`https://ctp-zip-api.herokuapp.com/zip/${tempZip}`)\n//         .then((res) => res.json())\n//         .then((City) => setZipInfo(City))\n//         .catch(() => setZipInfo([]));\n//       // when zip is valid it catches info\n//     }\n//     else {\n//       setZip(tempZip)};\n//   };\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n//         <h1>Zip Code Search</h1>\n//       </div>\n//       <div className=\"container\" class=\"row text-center\">\n//         <div class=\"row\">\n//         <b>Zip Code: </b>\n//         <div class=\"col align-center\">\n//         <ZipInput value={zip} handleChange={zipEvent}/>\n//         </div>\n//         </div>\n//         <div class=\"row align-center\">\n//           {//maps the zipInfo array into the new zipData matching each CITY data paremeter to the api's paremeter\n//           ZipInfo.map((zipData) => (\n//             <City\n//               state={zipData.State}\n//               city={zipData.City}\n//               lat={zipData.Lat}\n//               long={zipData.Long}\n//               estimatedPopulation={zipData.EstimatedPopulation}\n//               totalWages={zipData.TotalWages}\n//             />\n//           ))\n//           }\n//           {//if the zipInfo is 0, it will display No results\n//           ZipInfo.length===0 && <b> No results</b>\n//           }\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","App"],"sources":["/Users/erickcabrera/Desktop/Bytes/test-react-1/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n//must use usestate to state variables that we can hook from\n// import React, {useState} from \"react\";\n// import \"./App.css\";\n// function City({city, state, lat, long, estimatedPopulation, totalWages}) {\n//   //how the zip code information will be displayed\n//   return (\n//     <div class=\"row city\">\n//   <div class=\"box\">\n//   <div class=\"title\">{city},<b> </b>{state}</div>\n//     <div class=\"sub\">\n//       <ul>\n//         <li><b>State: </b>{state}</li>\n//         <li><b>Location: </b> ({lat},<b> </b>{long})</li>\n//         <li><b>Population (estimated): </b> {estimatedPopulation} </li>\n//         <li><b>Estimated Wages: </b> {totalWages} </li>\n//       </ul>\n//     </div>\n//     </div>\n//   </div>\n//   );\n// }\n// //Handles zip input\n// function ZipInput({handleChange, value}) {\n//   return (\n//   <div class=\"inputBox\">\n//     <input class=\"input\" name=\"zip\" placeholder=\"Try 11006\" type=\"text\" onChange={handleChange} value={value}>\n//     </input>\n//   </div>\n//   );\n// }\n// function App() {\n//   //Zip code\n//   const [zip, setZip] = useState(\"\");\n//   //holds zip info from api event handler in array\n//   const [ZipInfo,setZipInfo]= useState([]);\n//   //event handler that  lets zipInfo hold array of information\n//   const zipEvent = (event) =>{\n//     const tempZip = event.target.value;\n//     //if the zip length is 5, it will fetch from the api\n//     if (zip && tempZip.length === 5) {\n//       fetch(`https://ctp-zip-api.herokuapp.com/zip/${tempZip}`)\n//         .then((res) => res.json())\n//         .then((City) => setZipInfo(City))\n//         .catch(() => setZipInfo([]));\n//       // when zip is valid it catches info\n//     }\n//     else {\n//       setZip(tempZip)};\n//   };\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n//         <h1>Zip Code Search</h1>\n//       </div>\n//       <div className=\"container\" class=\"row text-center\">\n//         <div class=\"row\">\n//         <b>Zip Code: </b>\n//         <div class=\"col align-center\">\n//         <ZipInput value={zip} handleChange={zipEvent}/>\n//         </div>\n//         </div>\n//         <div class=\"row align-center\">\n//           {//maps the zipInfo array into the new zipData matching each CITY data paremeter to the api's paremeter\n//           ZipInfo.map((zipData) => (\n//             <City\n//               state={zipData.State}\n//               city={zipData.City}\n//               lat={zipData.Lat}\n//               long={zipData.Long}\n//               estimatedPopulation={zipData.EstimatedPopulation}\n//               totalWages={zipData.TotalWages}\n//             />\n//           ))\n//           }\n//           {//if the zipInfo is 0, it will display No results\n//           ZipInfo.length===0 && <b> No results</b>\n//           }\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\n\n\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAC5B;QAAK,GAAG,EAAED,IAAK;QAAC,SAAS,EAAC,UAAU;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAClD;QAAA,iCACO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1B,eACJ;QACE,SAAS,EAAC,UAAU;QACpB,IAAI,EAAC,qBAAqB;QAC1B,MAAM,EAAC,QAAQ;QACf,GAAG,EAAC,qBAAqB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGvB;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KAnBQC,GAAG;AAqBZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}